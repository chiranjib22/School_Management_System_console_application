// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using School_Management_System.Data;

#nullable disable

namespace School_Management_System.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("School_Management_System.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Classes", (string)null);
                });

            modelBuilder.Entity("School_Management_System.Models.JoinedEntities.ClassesSubjects", b =>
                {
                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("AssignedTeacherId")
                        .HasColumnType("int");

                    b.HasKey("ClassId", "SubjectId");

                    b.HasIndex("AssignedTeacherId");

                    b.HasIndex("SubjectId");

                    b.ToTable("ClassesSubjects");
                });

            modelBuilder.Entity("School_Management_System.Models.ResultSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<double?>("FinalTerm")
                        .HasColumnType("float");

                    b.Property<double?>("FirstTerm")
                        .HasColumnType("float");

                    b.Property<double?>("MidTerm")
                        .HasColumnType("float");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId", "SubjectId");

                    b.ToTable("ResultSheets", (string)null);
                });

            modelBuilder.Entity("School_Management_System.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subjects", (string)null);
                });

            modelBuilder.Entity("School_Management_System.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("School_Management_System.Models.Admin", b =>
                {
                    b.HasBaseType("School_Management_System.Models.User");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Admins", (string)null);

                    b.HasData(
                        new
                        {
                            Id = -2,
                            Password = "$2a$11$oOCLQLJaIJYCI/uRPa82jeBBwWy5TMg54UVp2eEFNlIhhCbP6J.qS",
                            UserName = "admin",
                            Name = "Super Admin"
                        });
                });

            modelBuilder.Entity("School_Management_System.Models.Teacher", b =>
                {
                    b.HasBaseType("School_Management_System.Models.User");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Teachers", (string)null);
                });

            modelBuilder.Entity("School_Management_System.Models.JoinedEntities.ClassesSubjects", b =>
                {
                    b.HasOne("School_Management_System.Models.Teacher", "AssignedTeacher")
                        .WithMany("AssignedSubjects")
                        .HasForeignKey("AssignedTeacherId");

                    b.HasOne("School_Management_System.Models.Class", "Class")
                        .WithMany("AssignedSubjects")
                        .HasForeignKey("ClassId");

                    b.HasOne("School_Management_System.Models.Subject", "Subject")
                        .WithMany("AssignedClasses")
                        .HasForeignKey("SubjectId");

                    b.Navigation("AssignedTeacher");

                    b.Navigation("Class");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("School_Management_System.Models.ResultSheet", b =>
                {
                    b.HasOne("School_Management_System.Models.JoinedEntities.ClassesSubjects", "ClassSubject")
                        .WithMany("ResultSheets")
                        .HasForeignKey("ClassId", "SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassSubject");
                });

            modelBuilder.Entity("School_Management_System.Models.Admin", b =>
                {
                    b.HasOne("School_Management_System.Models.User", null)
                        .WithOne()
                        .HasForeignKey("School_Management_System.Models.Admin", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("School_Management_System.Models.Teacher", b =>
                {
                    b.HasOne("School_Management_System.Models.User", null)
                        .WithOne()
                        .HasForeignKey("School_Management_System.Models.Teacher", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("School_Management_System.Models.Class", b =>
                {
                    b.Navigation("AssignedSubjects");
                });

            modelBuilder.Entity("School_Management_System.Models.JoinedEntities.ClassesSubjects", b =>
                {
                    b.Navigation("ResultSheets");
                });

            modelBuilder.Entity("School_Management_System.Models.Subject", b =>
                {
                    b.Navigation("AssignedClasses");
                });

            modelBuilder.Entity("School_Management_System.Models.Teacher", b =>
                {
                    b.Navigation("AssignedSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
